export const commands: ({
    command: string;
    describe: string;
    builder: {
        'cid-base': {
            describe: string;
            type: string;
            default: string;
        };
        human: {
            type: string;
            default: boolean;
        };
        timeout: {
            type: string;
            coerce: typeof import("parse-duration").default;
        };
    };
    handler({ ctx, cidBase, human, timeout }: {
        ctx: import("../../types.js").Context;
        human: boolean;
        cidBase: string;
        timeout: number;
    }): Promise<void>;
} | {
    command: string;
    describe: string;
    builder: {
        key: {
            alias: string;
            describe: string;
            type: string;
            coerce: (value: any) => import("multiformats").CID | undefined;
        };
        'cid-base': {
            describe: string;
            type: string;
            default: string;
        };
        timeout: {
            type: string;
            coerce: typeof import("parse-duration").default;
        };
    };
    handler({ ctx, key, cidBase, timeout }: {
        ctx: import("../../types.js").Context;
        key: import("multiformats").CID;
        cidBase: string;
        timeout: number;
    }): Promise<void>;
} | {
    command: string;
    describe: string;
    builder: {
        peer: {
            alias: string;
            describe: string;
            type: string;
        };
        'cid-base': {
            describe: string;
            type: string;
            default: string;
        };
        timeout: {
            type: string;
            coerce: typeof import("parse-duration").default;
        };
    };
    handler({ ctx, peer, cidBase, timeout }: {
        ctx: import("../../types.js").Context;
        peer: string;
        cidBase: string;
        timeout: number;
    }): Promise<void>;
})[];
//# sourceMappingURL=index.d.ts.map